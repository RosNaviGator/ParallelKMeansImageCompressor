#include <opencv2/opencv.hpp>
#include <iostream>
#include <vector>
#include <string>
#include <fstream>
#include <sstream>
#include <cmath>
#include <cstdint>
#include <filesystem>
#include <filesUtils.hpp>
#include <utilsCLI.hpp>

using namespace km;
using namespace km::filesUtils;
using namespace km::utilsCLI;


auto main() -> int
{
    decoderHeader();
    std::cout << "This is the Decoder to decode the .kc file generated by the Encoder, if you haven't already compressed a file by the Encoder this Decoder is not so useful" << std::endl;
    std::cout << std::endl;
    std::cout << std::endl;
    std::string path = "";
    createOutputDirectories();
    std::filesystem::path decodeDir;
    std::vector<std::filesystem::path> imageNames;
    createDecodingMenu(decodeDir, imageNames);
    displayDecodingMenu(path, imageNames, decodeDir);
    std::cout << std::endl;
    std::cout << std::endl;
    // std::getline(std::cin, path); 
    std::cout << std::endl;
    std::string answer = "d";
    while (answer != "y" && answer != "n")
    {
        decoderHeader();
        std::cout << "Do you want to save a copy .jpg of your Compressed Image? [y/n]"<< std::endl;
        std::cout << std::endl;
        std::cout << std::endl;
        std::cin >> answer;
    }

    cv::Mat imageCompressed; 

    readBinaryFile(path, imageCompressed);

    cv::cvtColor(imageCompressed, imageCompressed, cv::COLOR_YCrCb2BGR);

    if(answer == "y")
    {
        if (path.length() >= 3) {
        // Rimuovi gli ultimi 3 caratteri dalla stringa
        path.erase(path.length() - 3);
        }
        std::string outputPath = path + std::string(".jpg");
        cv::imwrite(outputPath, imageCompressed);
    }
    workDone();
    std::cout << "Enjoy your Compressed Image!" << std::endl;
    cv::imshow("Compressed Image", imageCompressed);
    cv::waitKey(0);
}